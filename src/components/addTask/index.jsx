import React, { useState, useEffect } from 'react';
import { IMaskInput } from 'react-imask';
import c from './add.module.scss';
import { API } from '../../api';
import { Icons } from '../../assets/icons';

const AddTask = ({setActive}) => {
  const [ workers, setWorkers ] = useState(null)
  const [ executors, setExecutors ] = useState(null)

  useEffect(() => {
    API.getWorkers()
      .then(res => {
        console.log(res.data);
        const result = res.data.filter(item => item["–¥–æ–ª–∂–Ω–æ—Å—Ç—å"] !== '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä')
        const executorsData = res.data.filter(item => item["–¥–æ–ª–∂–Ω–æ—Å—Ç—å"] === '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä')
        setWorkers(result)
        setExecutors(executorsData)
      })
  }, [])

  const [formData, setFormData] = useState({
    –Ω–∞–∑–≤–∞–Ω–∏–µ: '',
    –¥–∞—Ç–∞: '',
    –≤—Ä–µ–º—è: '',
    —Å—Ä–æ–∫: '', // —Å—é–¥–∞ –±—É–¥–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å—Å—è ISO —Å—Ç—Ä–æ–∫–∞
    –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: '',
    –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: '',
    –ø–æ—Å—Ç–∞–Ω–æ–≤—â–∏–∫: '',
    –æ—Ü–µ–Ω–∫–∞: 0,
    –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ_–≤—Ä–µ–º—è_–≤_–º–∏–Ω—É—Ç–∞—Ö: 0.0,
    —Å—Ç–∞—Ç—É—Å: '–≤_–æ–∂–∏–¥–∞–Ω–∏–∏',
    –æ–ø–æ–∑–¥–∞–Ω–∏–µ_–ø–æ_–∑–∞–¥–∞—á–µ_–≤_–º–∏–Ω—É—Ç–∞—Ö: 0
  });

  // –°–æ–±–∏—Ä–∞–µ–º ISO-–¥–∞—Ç—É –∏–∑ –¥–≤—É—Ö –ø–æ–ª–µ–π
  useEffect(() => {
    const { –¥–∞—Ç–∞, –≤—Ä–µ–º—è } = formData;
  
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º: –µ—Å—Ç—å –ª–∏ –∏ –¥–∞—Ç–∞, –∏ –≤—Ä–µ–º—è, –∏ –æ–Ω–∏ –ø–æ–ª–Ω—ã–µ
    if (
      /^\d{2}\.\d{2}\.\d{4}$/.test(–¥–∞—Ç–∞) &&
      /^\d{2}:\d{2}$/.test(–≤—Ä–µ–º—è)
    ) {
      const [day, month, year] = –¥–∞—Ç–∞.split('.');
      const [hours, minutes] = –≤—Ä–µ–º—è.split(':');
      const iso = new Date(Date.UTC(year, month - 1, day, hours, minutes)).toISOString();
      setFormData(prev => ({ ...prev, —Å—Ä–æ–∫: iso }));
    }
  }, [formData.–¥–∞—Ç–∞, formData.–≤—Ä–µ–º—è]);

  const handleChange = (key, value) => {
    setFormData(prev => ({ ...prev, [key]: value }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('üìù –§–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –∑–∞–¥–∞—á–∏:', formData);

    // –¢—É—Ç –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å POST –∑–∞–ø—Ä–æ—Å
    API.postTask(formData)  
      .then(res => {
        if(res.status === 201){
          window.location.reload()
        }
      })
  };
  
  return (
    <div className={c.container}>
      <div className={c.add}>
        <div className={c.close} onClick={() => setActive(false)}>
          <img src={Icons.close} alt="close" />
        </div>
        <h3>–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É</h3>
        <form onSubmit={handleSubmit}>
          <div>
            <input
              type="text"
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ"
              value={formData.–Ω–∞–∑–≤–∞–Ω–∏–µ}
              onChange={(e) => handleChange('–Ω–∞–∑–≤–∞–Ω–∏–µ', e.target.value)}
            />
          </div>

          <div>
            <IMaskInput
              mask="00.00.0000"
              placeholder="–°—Ä–æ–∫ –¥–∞—Ç–∞"
              value={formData.–¥–∞—Ç–∞}
              onAccept={(value) => handleChange('–¥–∞—Ç–∞', value)}
            />
          </div>

          <div>
            <IMaskInput
              mask="00:00"
              placeholder="–°—Ä–æ–∫ –≤—Ä–µ–º—è"
              value={formData.–≤—Ä–µ–º—è}
              onAccept={(value) => handleChange('–≤—Ä–µ–º—è', value)}
            />
          </div>

          <div>
            <select
              value={formData.–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç}
              onChange={(e) => handleChange('–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç', e.target.value)}
            >
              <option value="" disabled>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</option>
              <option value="–Ω–∏–∑–∫–∏–π">–ù–∏–∑–∫–∏–π</option>
              <option value="—Å—Ä–µ–¥–Ω–∏–π">–°—Ä–µ–¥–Ω–∏–π</option>
              <option value="–≤—ã—Å–æ–∫–∏–π">–í—ã—Å–æ–∫–∏–π</option>
            </select>
          </div>

          <div>
            <select
              value={formData.–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å}
              onChange={(e) => handleChange('–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å', e.target.value)}
            >
              <option value="" disabled>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</option>
              {
                workers && workers.map(item => (
                  <option key={item.id} value={item.id}>
                    {`${item["–∏–º—è"]} ${item["—Ñ–∞–º–∏–ª–∏—è"]}`}
                  </option>
                ))
              }
            </select>
          </div>

          <div>
            <select
              value={formData.–ø–æ—Å—Ç–∞–Ω–æ–≤—â–∏–∫}
              onChange={(e) => handleChange('–ø–æ—Å—Ç–∞–Ω–æ–≤—â–∏–∫', e.target.value)}
            >
              <option value="" disabled>–ü–æ—Å—Ç–∞–Ω–æ–≤—â–∏–∫</option>
              {
                
                executors && executors.map(item => (
                  <option key={item.id} value={item.id}>
                    {`${item["–∏–º—è"]} ${item["—Ñ–∞–º–∏–ª–∏—è"]}`}
                  </option>
                ))
              }
            </select>
          </div>

          <button type="submit">–î–æ–±–∞–≤–∏—Ç—å</button>
        </form>
      </div>
    </div>
  );
};

export default AddTask;
